version: "3.9"

services:
  redis:
    image: redis
    env_file:
      - .env
    networks:
      - monopoly
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}

  db:
    image: postgres
    volumes:
      - ./docker/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_DB=${POSTGRES_NAME}
    ports:
      - "${POSTGRES_SERVICE_PORT}:${POSTGRES_SERVICE_PORT}"
    networks:
      - monopoly
    restart: unless-stopped

  apiserver:
    build:
      context: WebBack/
      dockerfile: Dockerfile
    working_dir: /app/
    command: npm start
    networks:
      - monopoly
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - .env
    restart: unless-stopped

  asgiserver:
    image: monopoly-server
    build:
      context: server/
      dockerfile: Dockerfile
    working_dir: /app/
    command:
      - "/bin/sh"
      - "-c"
      - "python manage.py migrate && daphne -b 0.0.0.0 -p $$DAPHNE_PORT server.asgi:application"
    ports:
      - "${DAPHNE_PORT}:${DAPHNE_PORT}"
    env_file:
      - .env
    networks:
      - monopoly
    restart: unless-stopped

  worker:
    image: monopoly-server
    build:
      context: server/
      dockerfile: Dockerfile
    command: bash -c "python manage.py migrate && python manage.py runworker game_engine"
    env_file:
      - .env
    networks:
      - monopoly
    restart: unless-stopped

  nginx:
    image: monopoly-server-nginx
    build:
      context: WebFront
      dockerfile: ../docker/nginx/Dockerfile
    networks:
      - monopoly
    ports:
      - "${NGINX_HTTP_PORT}:${NGINX_HTTP_PORT}"
    env_file:
      - .env
    volumes:
      - ./docker/nginx/templates:/etc/nginx/templates
      - ./docker/data/nginx/logs:/var/log/nginx
      - ./docker/nginx/static:/usr/share/nginx/static
    restart: unless-stopped
    command:
      - "/bin/sh"
      - "-c"
      - "envsubst '$$NGINX_HOST $$DAPHNE_PORT $$API_PORT $$NGINX_HTTP_PORT' < /etc/nginx/templates/service.conf.template > /etc/nginx/conf.d/default.conf & nginx -g 'daemon off;' & while :; do sleep 12h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

networks:
  monopoly:
